{"version":3,"sources":["components/RepetitionExercise/index.js","components/Stopwatch/index.js","components/DurationExercise/index.js","components/TotalExercise/index.js","App.js","reportWebVitals.js","index.js"],"names":["RepetitionExercise","props","state","value","this","setState","prevState","newValue","updateValue","resetValue","name","onClick","addOne","reset","React","Component","Stopwatch","timerOn","timerStart","timerTime","startTimer","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","centiseconds","Math","floor","slice","seconds","minutes","DurationExercise","TotalExercise","totalMin","add","target","type","onChange","class","MENU","REPETITION_EXERCISE","DURATION_EXERCISE","MenuScreen","currentScreen","selectedItem","undefined","currentObjects","objType","filterNumberedItems","propertyName","find","obj","screen","filteredArray","filter","item","map","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.132d1ccc.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default class RepetitionExercise extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { value: this.props.value }\n    }\n    addOne() {\n        this.setState((prevState) => {\n            let newValue = prevState.value + 1\n            this.props.updateValue(newValue)\n            return {\n                value: newValue,\n            }\n        })\n    }\n    reset() {\n        this.setState((newValue) => {\n            let resetValue = newValue.value = 0\n            this.props.updateValue(resetValue)\n            return {\n                value: resetValue,\n            }\n        })\n    }\n    render() {\n        return (\n            <>\n                <p>{this.props.name}</p>\n                <p>Reps: {this.state.value}</p>\n                <button onClick={() => this.addOne()} >Complete Rep</button>\n                <button onClick={() => this.reset()} >Reset</button>\n            </>\n        )\n    }\n}","//https://medium.com/@peterjd42/building-timers-in-react-stopwatch-and-countdown-bc06486560a2\n\nimport React from \"react\"\n\nexport default class Stopwatch extends React.Component {\n    state = {\n        timerOn: false,\n        timerStart: 0,\n        timerTime: 0\n    };\n\n    startTimer = () => {\n        this.setState({\n            timerOn: true,\n            timerTime: this.state.timerTime,\n            timerStart: Date.now() - this.state.timerTime\n        });\n        this.timer = setInterval(() => {\n            this.setState({\n                timerTime: Date.now() - this.state.timerStart\n            });\n        }, 10);\n    };\n\n    stopTimer = () => {\n        this.setState({ timerOn: false });\n        clearInterval(this.timer);\n    };\n\n    resetTimer = () => {\n        this.setState({\n            timerStart: 0,\n            timerTime: 0\n        });\n    };\n\n    render() {\n        const { timerTime } = this.state;\n        let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n        let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n        let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n        return (\n            <>\n                <p>\n                    Timer: {minutes} : {seconds} : {centiseconds}\n                </p>\n                {this.state.timerOn === false && this.state.timerTime === 0 && (\n                    <button onClick={this.startTimer} >Start</button>\n                )}\n                {this.state.timerOn === true && (\n                    <button onClick={this.stopTimer} >Stop</button>\n                )}\n                {this.state.timerOn === false && this.state.timerTime > 0 && (\n                    <button onClick={this.startTimer} >Resume</button>\n                )}\n                {this.state.timerOn === false && this.state.timerTime > 0 && (\n                    <button onClick={this.resetTimer} >Reset</button>\n                )}\n            </>   \n        );\n    }\n}\n","import React from \"react\"\nimport Stopwatch from \"../Stopwatch\"\n\nexport default class DurationExercise extends React.Component {\n    render() {\n        return (\n            <>\n                <p>{this.props.name}</p>\n                <Stopwatch></Stopwatch>\n            </>\n        )\n    }\n}","import React from \"react\"\n\nexport default class TotalExercise extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { minutes: 0 }\n    }\n\n    totalMin = add => {\n        this.setState({ minutes: add.target.value })\n    }\n\n    render() {\n        return (\n            <>\n            <p>Enter total minutes spent exercising today:</p>\n            <input\n                type=\"number\" \n                value={this.state.minutes}\n                onChange={this.totalMin}\n            ></input>\n            <p class=\"total-time\">Total time: {this.state.minutes} minutes</p>   \n            </>\n        )\n    }\n    \n}","import React from \"react\"\nimport RepetitionExercise from \"./components/RepetitionExercise\"\nimport DurationExercise from \"./components/DurationExercise\"\nimport TotalExercise from \"./components/TotalExercise\"\nimport \"./App.css\"\n\nconst MENU = \"menu\"\nconst REPETITION_EXERCISE = \"repetition_exercise\"\nconst DURATION_EXERCISE = \"duration_exercise\"\n\nclass MenuScreen extends React.Component {\n  constructor(props) {\n    super(props)\n    let objects = [\n      { objType: \"number\", name: \"Push Ups\", value: 0 },\n      { objType: \"timer\", name: \"Bicycling\" },\n      { objType: \"number\", name: \"Jumping Jacks\", value: 0 },\n      { objType: \"timer\", name: \"Running\" },\n      { objType: \"number\", name: \"Sit Ups\", value: 0 },\n      { objType: \"timer\", name: \"Planking\" },\n      { objType: \"number\", name: \"Squats\", value: 0 }\n    ]\n    this.state = {\n      currentScreen: MENU,\n      selectedItem: undefined,\n      currentObjects: objects,\n      filterNumberedItems: false\n    }\n  } \n  \n  updateValue(newValue) {\n    let propertyName = this.state.selectedItem.objType === \"number\" ? \"value\" : \"timer\"\n    this.setState((prevState) => {\n      let objectToUpdate = prevState.currentObjects.find(\n        (obj) => obj === this.state.selectedItem\n      )\n      objectToUpdate[propertyName] = newValue\n      return { currentObjects: this.state.currentObjects }\n    })\n  }\n  render() {\n    let screen\n    switch (this.state.currentScreen) {\n      case MENU:\n        let filteredArray = this.state.filterNumberedItems\n          ? this.state.currentObjects.filter(\n            (item) => item.objType === \"number\"\n          )\n          : this.state.currentObjects\n        screen = (\n          <>\n            <h1>Go Do Something!</h1>\n            <h3>Select an exercise:</h3>\n            <ul>\n              {filteredArray.map((obj, index) =>\n                <li key={index}>\n                  <button\n                    class=\"main-button\"\n                    onClick={() =>\n                      this.setState({\n                        currentScreen:\n                          obj.objType === \"number\"\n                            ? REPETITION_EXERCISE\n                            : DURATION_EXERCISE,\n                        selectedItem: obj\n                      })\n                    }\n                  >{obj.name}</button><input type=\"checkbox\" class=\"check-box\"></input>\n                </li>\n              )}\n            </ul>\n            <TotalExercise></TotalExercise>\n          </>\n        )\n        break\n      case REPETITION_EXERCISE:\n        screen = (\n          <>\n            <RepetitionExercise\n              {...this.state.selectedItem}\n              updateValue={(value) => this.updateValue(value)}\n            ></RepetitionExercise>\n            <button onClick={() => this.setState({ currentScreen: MENU })}\n            >\n              Back\n            </button>\n          </>\n        )\n        break\n      case DURATION_EXERCISE:\n        screen = (\n          <>\n            <DurationExercise\n              {...this.state.selectedItem}\n            ></DurationExercise>\n            <button onClick={() => this.setState({ currentScreen: MENU })}\n            >\n              Back\n            </button>\n          </>\n        )\n        break\n      default:\n        screen = undefined\n    }\n    return screen\n  }\n}\n\nexport default class App extends React.Component {\n  render() {\n    return <MenuScreen></MenuScreen>\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}